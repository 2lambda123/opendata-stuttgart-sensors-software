; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; http://docs.platformio.org/page/projectconf.html

[platformio]
src_dir = .

[common]
build_flags =
  -DESP8266 ; as hint for ldf
  -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY
  -DVTABLES_IN_FLASH
  -DNDEBUG
  -Wl,-Teagle.flash.4m.ld   ; required for platform == espressif8266@1.8.0
;  -Wl,-Teagle.flash.4m3m.ld ; required for platform >= espressif8266@2.2.3 to make SPIFFS work

build_flags_esp32 =
  -DESP32 ; as hint for ldf
  -DPIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY
  -DVTABLES_IN_FLASH
build_flags_esp32_release = ${common.build_flags_esp32} -DNDEBUG
build_flags_esp32_debug = ${common.build_flags_esp32} -g -Og -fno-inline -DJTAG_DEBUGGER=1 -DDEBUG_ESP_PORT=Serial

board_build.f_cpu = 160000000L
; Always depend on specific library versions (wherever possible and only for external libraries)
; Keep Library names in the order of their dependencies (leaves at the top)
; ESP8266WiFi in both cases is necessary to solve a case sensitivity issue with WiFiUdp.h
; Use library ID numbers instead of names for libraries whose names are not unique
;   (like OneWire, LiquidCrystal_I2C and TinyGPSPlus)

lib_deps_generic_external =
  1@2.3.4 ; OneWire
  576@1.1.4 ; LiquidCrystal_I2C
  ;136 ; LiquidCrystal, alternative to 576 LiquidCrystal_I2C?
  Adafruit Unified Sensor@1.0.3
  Adafruit BMP085 Library@1.0.1
  Adafruit BMP280 Library@1.0.4
  Adafruit BME280 Library@1.0.9
  Adafruit HTU21DF Library@1.0.2
  ArduinoJson@6.12.0
  DallasTemperature@3.8.0
  ESP8266_SSD1306@4.0.0
  1655@1.0.2 ; TinyGPSPlus, formerly this was referenced as mikalhart/TinyGPSPlus#v0.95

lib_deps_esp8266_external =
  ;ESPSoftwareSerial@3.4.1 ; the latest version available in platformio
  ;plerup/espsoftwareserial#5.2.9 ; this version needs unpublished 8266 plaform, see https://github.com/plerup/espsoftwareserial/issues/103
  ;plerup/espsoftwareserial#5.0.3 ; this version compiles with esp8266 platform version 2.2.3
  plerup/espsoftwareserial#4.0.0 ; this version compiles with esp8266 platform version 1.8.0

lib_deps_esp32_external =

; system libraries from platform -> no version number
lib_deps_esp8266_platform =
  Hash
  Wire
  SPI
  ESP8266WiFi
  DNSServer
  ESP8266HTTPClient
  ESP8266WebServer
  ESP8266httpUpdate
  ESP8266mDNS

; system libraries from platform -> no version number
lib_deps_esp32_platform =
  Wire
  SPI
  WiFi
  DNSServer
  WiFiClientSecure
  HTTPClient
  FS
  SPIFFS
  WebServer
  Update
  HTTPUpdate
  ESPmDNS

lib_deps_esp8266 = ${common.lib_deps_esp8266_platform} ${common.lib_deps_esp8266_external} ${common.lib_deps_generic_external}
lib_deps_esp32 = ${common.lib_deps_esp32_platform} ${common.lib_deps_esp32_external} ${common.lib_deps_generic_external}

extra_scripts = platformio_script.py
# This release is reflecting the Arduino Core 2.4.2 release
# When the requirement for Arduino Core is raised, this
# needs to be adjusted to the matching version from
# https://github.com/platformio/platform-espressif8266/releases
platform_version = espressif8266@1.8.0
;platform_version = espressif8266@2.2.3 ; using Arduino core 2.5.2
[env]
;lib_ldf_mode = chain+
lib_ldf_mode = off
;lib_compat_mode = strict

[env:nodemcuv2]
lang = DE
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} '-DINTL_DE'
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_bg]
lang = bg
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} '-DINTL_BG'
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_cz]
lang = cz
framework = arduino
platform = ${common.platform_version}
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} '-DINTL_CZ'
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_dk]
lang = dk
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} '-DINTL_DK'
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_en]
lang = en
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} '-DINTL_EN'
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_es]
lang = es
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} '-DINTL_ES'
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_fr]
lang = fr
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} '-DINTL_FR'
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_it]
lang = it
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} '-DINTL_IT'
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_lu]
lang = lu
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} '-DINTL_LU'
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_nl]
lang = nl
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} '-DINTL_NL'
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_pl]
lang = pl
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} '-DINTL_PL'
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_pt]
lang = pt
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} '-DINTL_PT'
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_ru]
lang = ru
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} '-DINTL_RU'
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

[env:nodemcuv2_se]
lang = se
platform = ${common.platform_version}
framework = arduino
board = nodemcuv2
board_build.f_cpu = ${common.board_build.f_cpu}
build_flags = ${common.build_flags} '-DINTL_SE'
lib_deps = ${common.lib_deps_esp8266}
extra_scripts = ${common.extra_scripts}

;[env:lolin_d32_pro_debug]
;lang = DE
;latform = espressif32
;framework = arduino
;board = lolin_d32_pro
;build_flags = ${common.build_flags_esp32_debug} '-DINTL_DE'
;lib_deps = ${common.lib_deps_esp32}
;extra_scripts = ${common.extra_scripts}
;debug_tool = custom
;monitor_speed = 9600
;upload_port = /dev/cu.wchusbserial40
;monitor_port = /dev/cu.wchusbserial40
;targets = debug

